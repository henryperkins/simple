Objective: Generate comprehensive Google-style documentation for the following Python module.

Context: This module is part of a larger system aimed at providing AI-driven solutions. The target audience includes developers who will use this documentation to understand and maintain the code.

Module Name: {{ module_name }}
File Path: {{ file_path }}

Code Structure:

{% if classes %}
Classes:
{% for cls in classes %}
{{ _format_class_info(cls) }}
{% endfor %}
{% endif %}

{% if functions %}
Functions:
{% for func in functions %}
{{ _format_function_info(func) }}
{% endfor %}
{% endif %}

Source Code:
{{ source_code }}

Analyze the code and generate a JSON response adhering to this schema:

{
    "summary": "A concise summary of what the code does",
    "description": "A detailed description of the functionality",
    "args": [
        {
            "name": "argument_name",
            "type": "argument_type",
            "description": "argument description"
        }
    ],
    "returns": {
        "type": "return_type",
        "description": "description of the return value"
    },
    "raises": [
        {
            "exception": "exception_type",
            "description": "when this exception is raised"
        }
    ],
    "complexity": 1
}

Notes:
- Ensure the response matches the schema exactly, including required fields (`summary`, `description`, `returns`, `complexity`).
- If any data is unavailable, explicitly state "Not available."
- Optional fields like `args` and `raises` can default to empty arrays.

Respond only with the JSON object.
